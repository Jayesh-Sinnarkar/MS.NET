using System.Xml.Linq;
/*******************ASSIGNMENT 2*******************
 
   string Name -> no blank names should be allowed
   int EmpNo -> must be greater than 0
   decimal Basic -> must be between some range
   short DeptNo -> must be > 0

   Methods
   -------
   decimal GetNetSalary() -> returns calculated net salary (Use any formula to get net salary based on Basic salary)

   Create constructors to accept initial values for Employee obj
   Employee o1 = new Employee("Amol",123465, 10);
   Employee o2 = new Employee("Amol",123465);
   Employee o3 = new Employee("Amol");
   Employee o4 = new Employee();

   EmpNo must be autogenerated ... i.e.
   first object should automatically get EmpNo 1
   second object should automatically get EmpNo 2
   third object should automatically get EmpNo 3
   ...and so on...

   Test Cases
   Employee o1 = new Employee()
   Employee o2 = new Employee()
   Employee o3 = new Employee()
   cw(o1.EmpNo)
   cw(o2.EmpNo)
   cw(o3.EmpNo)

   cw(o3.EmpNo)
   cw(o2.EmpNo)
   cw(o1.EmpNo)
    */

namespace ASSIGNMENT_2
{

    internal class Employee
    {
        static void Main()
        {
            Employee employee1 = new Employee("Jayesh", 101, 100000);
            Employee employee2 = new Employee("Aditya", 102);
            Employee employee3 = new Employee("Ashish");
            Employee employee4 = new Employee();

            Console.WriteLine(employee1);
            Console.WriteLine(employee2);

            Employee o1 = new Employee();
            Employee o2 = new Employee();
            Employee o3 = new Employee();

            Console.WriteLine(o1.EmpNo);
            Console.WriteLine(o2.EmpNo);
            Console.WriteLine(o3.EmpNo);

            Console.WriteLine(o3.EmpNo);
            Console.WriteLine(o2.EmpNo);
            Console.WriteLine(o1.EmpNo);

        }

        private string? name;
        public string? Name
        {
            set
            {
                if (value.Length > 0 || value != null)
                    name = value;
                else
                    System.Console.WriteLine("Invalid Name Input");
            }

            get { return name; }
        }

        private static int empCount = 0;
        public static int EmpCount { set { empCount = value; } get { return empCount; } }

        private int empNo = 0;
        public int EmpNo
        {
            set
            {
                if (value > 0)
                    empNo = value;
            }
            get { return empNo; }
        }


        private decimal basic;
        public decimal Basic
        {
            set
            {
                if (100000 >= value && value >= 50000)
                    basic = value;
            }
            get { return basic; }
        }


        private short deptNo;
        public short DeptNo
        {
            set
            {
                if (value > 0)
                    deptNo = value;
                else System.Console.WriteLine("Invalid department number!");
            }
            get { return deptNo; }
        }



        public Employee(string Name = "Aditya", short DeptNo = 102, decimal Basic = 50000)
        {
            this.Name = Name;
            this.DeptNo = DeptNo;
            this.Basic = Basic;
            EmpCount++;
            EmpNo = EmpCount;
        }

        public decimal GetNetSalary()
        {
            return basic * 12;
        }



        public override string ToString()
        {
            return "Employee [ Name: " + Name + ", EmpId:" + EmpNo + ",  DeptNo: " + DeptNo + ", Basic:" + Basic + " ]";
        }


    }


    
}